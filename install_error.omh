# -----------------------------------------------------------------------------
#         cppad_py: A C++ Object Library and Python Interface to Cppad
#          Copyright (C) 2017-20 Bradley M. Bell (bradbell@seanet.com)
#              This program is distributed under the terms of the
#              GNU General Public License version 3.0 or later see
#                    https://www.gnu.org/licenses/gpl-3.0.txt
# -----------------------------------------------------------------------------
{xsrst_begin install_error}

.. include:: ../preamble.rst

{xsrst_spell
    setuptools
    errno
    pypi
    cppad
    yml
    exp
    sqrt
    swg
    sudo
    pytest
    libcppad
    bradbell
}

Error Messages During Installation
##################################

Solved
******

swig
====
If the error message below occurs, try installing
`http://www.swig.org/ <swig>`_ on you system:

| |tab| ``FileNotFoundError: [Errno 2] No such file or directory: 'swig'``

The following message as also been seen:

| |tab| ``Error: Unable to find 'python.swg'``

In this case try installing ``swig-python`` .

Permissions
===========
If you try to do a system wide install, and do not have permission,
you will get the following message:

| |tab| ``ERROR: Could not install packages due to`` ... ``Permission denied:``

Try install in your local user space. For example, if you are using pip,

| |tab| ``pip install -i https://test.pypi.org/simple/ cppad_py --user --verbose``

CppAD Library Missing
*********************
If the error message below occurs, it is because the CppAD library
is not in your ``LD_LIBRARY_PATH`` :

| |tab| ``ImportError: libcppad_lib.so`` ... ``can not open shared object file``

If you run the ``setup.py`` script directory, or
if you included the ``--verbose`` option in your ``pip`` command,
there should be text at the end that tells you how to modify your
``LD_LIBRARY_PATH`` .
If you have a Mac, you may instead need to modify ``DYLD_LIBRARY_PATH`` .

Fortify Source
**************
If you set :ref:`build_type<get_cppad_sh.settings.build_type>` to ``debug`` ,
you may get the following warning during the build:

| |tab| ``#warning _FORTIFY_SOURCE requires compiling with optimization``

This is a problem with the python setuptools,
one can un-define a macro, but it does not remove a original definition.

Unsolved
********
If you know how to fix and of he errors below, please open an
`issue <https://github.com/bradbell/cppad_py/issues>`_
and put your solution there.

Travis
======
The following message occurs on a Travis system of unknown configuration;
i.e., it has not been reproduced outside of Travis.

| |tab| ``return alpha * p * a_exp( - z * z ) / numpy.sqrt(numpy.pi)[0m``
| |tab| |tab| ``TypeError: unsupported operand type(s) for /: 'a_double' and 'float'``

Note the same code works on other systems.
The ``.travis.yml`` file is included below:

| |tab| ``language: python``
| |tab| ``python:``
| |tab| |tab| -  ``"3.7"``
| |tab| ``install:``
| |tab| |tab| -  ``sudo apt-get install swig``
| |tab| |tab| -  ``python setup.py install``
| |tab| |tab| -  ``pip install -i https://test.pypi.org/simple/ cppad_py``
| |tab| ``script:``
| |tab| |tab| -  ``pytest tests``
| |tab| |tab| -  ``make examples``

{xsrst_end install_error}
