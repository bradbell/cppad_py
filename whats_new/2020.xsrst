-------------------------------------------------------------------------------
          cppad_py: A C++ Object Library and Python Interface to Cppad
           Copyright (C) 2017-20 Bradley M. Bell (bradbell@seanet.com)
               This program is distributed under the terms of the
               GNU General Public License version 3.0 or later see
                     https://www.gnu.org/licenses/gpl-3.0.txt
-------------------------------------------------------------------------------
{xsrst_begin whats_new_2020}

.. include:: ../preamble.rst

{xsrst_spell
    omhelp
    erf
    xq
    yq
    inplace
    stdlib
    libc
    cmake
    json
    cppad
    seirs
    seirwd
    covid
    fabs
    runge
    steppers
    inv
    misc
    omh
    anl
    dir
    mcs
    url
    init
}

CppAD Py Changes During 2020
############################

{xsrst_children
    whats_new/2018.xsrst
}
Previous Years
**************
:ref:`whats_new_2018<whats_new_2018>`

11-04
*****
The install prefix for cppad in ``bin/get_cppad.sh``
is called *cmake_install_prefix* in cppad_py,
but it is called *cppad_prefix* in cppad.
The cmake command in ``bin/get_cppad.sh`` has been
fixed to account for this.


11-03
*****
The install prefix name was changed from *cppad_prefix* to
:ref:`cmake_install_prefix<get_cppad_sh.settings.cmake_install_prefix>`.

10-31
*****
Fix some problems with the macOS install when
:ref:`include_fixed<get_cppad_sh.settings.include_mixed>` is true.

10-30
*****
The :ref:`install command<setup_py.install>` no longer creates
a local copy of ``cppad_py`` for testing. (On macOS systems the
local copy would cause problems during the install.)
The :ref:`setup_py.test.build_local.py` still builds the local
copy for testing.

10-29
*****
# . The :ref:`get_cppad_sh.settings.cppad_libdir` setting was
    added to ``bin/get_cppad.sh``.
    This fixed a problem on some systems where ``bin/get_cppad.sh``
    and ``bin/get_cppad_mixed.sh`` might install the cppad library
    in two different locations and confuse the setup procedure.

#.  Fix a problem with ``setup.py`` where it sometimes puts the distribution
    in ``site-packages/cppad_py-`` *version* ``.egg/cppad_py`` instead of
    ``site-packages/cppad_py``. This may have something to do with the
    install egg being a directory instead of a zip file.

10-28
*****
#.  Improve the :ref:`setup.py<setup_py>` install instructions.
    To be specific, change ``python`` to ``python3`` and edit the
    :ref:`external requirements<setup_py.external_requirements>`.

#.  Improve the :ref:`get_cppad_sh` script so that it gets and updates
    posted to the remote repository (since the previous run of the script).


10-21
*****
#.  Add a second :ref:`optimize_fixed example<mixed_optimize_fixed.examples>`.

#.  Advance to cppad-20201021 (this fixes a warning on some compilers).

10-19
*****
Add the non linear constraint functions of the fixed effects
to the mixed class; see :ref:`mixed_fix_constraint`.

10-17
*****
#.  The default value (corresponding to ``None``)
    for :ref:`mixed_optimize_fixed.fixed_in_(random_in)` in ``optimize_fixed``
    was changed from zero to *fixed_init* (*random_init*).
    The :ref:`mixed_ran_likelihood_xam_py` example was changed to use this
    default.

#.  There was a problem linking the needed libraries when
    :ref:`include_mixed<get_cppad_sh.settings.include_mixed>` was true.
    This has been fixed.

#.  The :ref:`install_error.match_op.hpp` warning was added to the
    install errors section.

#.  The :ref:`numpy syntax<a_double_unary_fun.syntax.python>` was added
    to the documentation python syntax for ``a_double`` unary functions;
    for an example see :ref:`a_double_unary_fun_xam_py`.

10-16
*****
#.  Add the :ref:`mixed` class an make it optional during the install process;
    see :ref:`include_mixed<get_cppad_sh.settings.include_mixed>`.
    This class is under construction and its API may change.
    Check this page for such changes.

#.  Change the install process so both a debug and release version of
    :ref:`cmake_install_prefix<get_cppad_sh.settings.build_type.cmake_install_prefix>`
    can be installed at the same time.

#. Some of the install steps in :ref:`setup_py` have changed.


10-13
*****
The :ref:`xsrst_py` utility would crash if a section had :ref:`child_cmd`
and was :ref:`indented<xsrst_py.indentation>`.
This has been fixed

10-02
*****
#.  The library documentation that is for both c++ and python was improved.
    To be specific, both the c++ and python syntax was included.
    Also these sections were moved from children of :ref:`cpp_lib`
    to children of :ref:`library`.

#.  The :ref:`xsrst_py` utility has been improved. To be specific, it no
    longer overwrites ``*.rst`` files that have not changed. This makes
    the sphinx build operation faster (by not reprocessing files
    that have not changed).

#.  Use the 95% quantile, instead of maximum, absolute residual when
    testing simulated fit in :ref:`numeric_covid_19_xam_py`.
    This reduces the change of a random failure.

09-30
*****
#.  The ``error_message`` routine was replaced by :ref:`exceptions<exception>`
    (``error_message`` was not thread safe).
    This is a change to the API, you will have to use exceptions objects
    instead of the ``error_message`` routine to retrieve the error messages.

#.  Change the release version so it also throws exceptions for cppad_py error
    messages (cppad error messages still require using the debug version).

09-14
*****
#.  xsrst: the :ref:`target<xsrst_py.command_line_arguments.target>`
    command line argument was added and the section numbers were removed
    from the html output. This was done so that adding or removing one
    section does not cause changes in the github pages for all the other
    sections. In addition, the table of contents and link to the index
    now appear in the navigation frame for both the html and pdf output.
    Furthermore, the table of contents uses the section number for the
    link so that the title is easier to read.

#.  xsrst: A :ref:`begin_parent<begin_cmd.parent_section>` must be the first
    begin command in a file. This restriction is new and makes the pdf output
    for the parent come before its children.

09-13
*****
#.  The text ``xsrst:`` was added to the beginning of each whats new item
    (see below) that only pertained to the :ref:`xsrst.py<xsrst_py>` program.
#.  xsrst: The order of the sections in the pdf file and the
    table of contents was corrected.
#.  xsrst: Put spaces around table of contents levels that have more that one
    entry. Also remove the level of indentation in table of contents by one
    because the root section stands out has having not number in front of it.
#.  The latex numbering of sections is incorrect, so change them to the
    corresponding xsrst section numbers in both the html and pdf output.
#.  xsrst: Correct position of :ref:`sphinx_dir<xsrst_py.syntax>` in the
    command line syntax.

09-12
*****
#.  xsrst: A table of contents that only contains section titles,
    not headings within a section, was added.
#.  xsrst: The following restriction was added: a
    :ref:`section_name<begin_cmd.section_name>`
    can not begin with ``xsrst_``.

07-31
*****
#.  xsrst: An empty line at beginning of xsrst input file was causing it to crash
    (this has been fixed).
#.  xsrst: Putting version number in the documentation navigation side bar
    changes every gh-pages file when version changes. Move it to
    the first heading under the title :ref:`cppad_py<cppad_py>`
#.  xsrst: spell checking is not done for a *url* of the form
    \` < *url* > \`_ or \` *text* < *url* > \`_.

07-30
*****
xsrst: The words 'anl', 'dir', 'mcs' were removed from the xsrst dictionary.
The word 'initialization' was added to the xsrst dictionary.

07-29
*****
#.  xsrst: Add the optional command line argument
    :ref:`line_increment<xsrst_py.command_line_arguments.line_increment>`.
    This is an aid for finding the source of errors and warnings
    reported by sphinx.
#.  xsrst: Sometimes xsrst would not recognize a command that came directly after a
    Fix :ref:`file_cmd`. This has been fixed.

07-28
*****
#.  xsrst: Move version number from the title in :ref:`cppad_py<cppad_py>` to
    the documentation navigation side bar.
#.  xsrst: Add the :ref:`configure` section.
#.  xsrst: The :ref:`xsrst begin command<begin_cmd>` was not recognized
    at the beginning of a file
    (when there is no new line before it). This has been fixed.
#.  xsrst: Change the *index_file* to
    :ref:`keyword<xsrst_py.command_line_arguments.keyword>`
    and *spell_file* to
    :ref:`spelling<xsrst_py.command_line_arguments.spelling>`

07-25
*****
#.  xsrst: Install :ref:`xsrst.py<xsrst_py>` during the
    :ref:`install<setup_py.install>` procedure
    (not yet available from ``pip``).
#.  xsrst: Add a :ref:`purpose<xsrst_py.purpose>` paragraph to xsrst documentation.
#.  Move the ``*.omh`` files to ``*.xsrst`` files (they have been converted
    from omhelp input files to xsrst input files).
#.  xsrst: Change the :ref:`keyword<xsrst_py.command_line_arguments.keyword>`
    to use python regular expressions and remove the whats new month-day
    headings from the :ref:`index<genindex>`.

07-24
*****
#.  xsrst: Add the :ref:`xsrst.py<xsrst_py>` program
    which extracts sphinx ``*.rst`` files from source code.
    This program is not yet installed but you can use it by placing
    the script ``bin/xsrst.py`` in your execution path.
#.  Convert the cppad_py documentation to xsrst input files,
    which are mostly sphinx rst with a few extra xsrst commands.
#.  Use xsrst and sphinx to generate this documentation for cppad_py.

07-18
*****

#.  The experimental ``bin/xsrst.py`` program was added.
    This program runs its tests and builds its documentation
    (in the ``sphinx`` ) directory with the command ``bin/check_xsrst.sh``.
    The intention is to convert the cppad_py documentation from omhelp to
    sphinx.
#.  Convert all the cppad_py source code to use spaces instead of tabs
    (with tab stops at multiples of 4 spaces).

07-05
*****

#.  The :ref:`prototype<ad_vec_cppad2std.syntax>` for ``vec2a_double``
    was the same as for :ref:`d_vec_std2cppad<d_vec_cppad2std>`.
    This has been fixed.
#.  The limits for the :ref:`fun_from_json_xam_py<fun_from_json_xam_py>` and :ref:`fun_to_json_xam_py<fun_to_json_xam_py>`
    example code were incorrect (this has been fixed).
#.  The in :ref:`fun_from_json_xam_cpp<fun_from_json_xam_cpp>` the title was corrected; to be specific,
    to_json was changed to from_json

05-17
*****
The ``abs`` :ref:`a_double_unary_fun<a_double_unary_fun>` was added
(works the same as the ``fabs`` function).

05-16
*****

#.  A discussion of some subtle issues,
    when interpolation is used to define an ODE,
    was added to the ``ode_multi_step`` ; see
    :ref:`set_t_all_index<numeric_ode_multi_step>`.
#.  Add the :ref:`alpha<numeric_seirwd_model.p_all.alpha>` parameter to the
    SEIRWD model.

05-15
*****
The file ``ode_solve.py`` was moved to ``ode_multi_step.py``
and :ref:`numeric_ode_multi_step<numeric_ode_multi_step>` was extended to allow for different ODE solvers
(steppers).

05-14
*****

#.  The example semi-stiff integrator :ref:`numeric_rosen3_step<numeric_rosen3_step>` was added.
#.  The example file ``runge4.py`` was moved to ``ode_solve.py``
    in preparation for other solvers.
#.  Add the :ref:`numeric_simple_inv<numeric_simple_inv>` example routine for
    AD inversion of matrices.
#.  Add mention of which :ref:`numeric_xam<numeric_xam>` routines can take ``a_double`` values.
#.  Simplify the :ref:`numeric_seirwd_model_xam_py<numeric_seirwd_model_xam_py>` example using numpy vector operations.
#.  More improvements to were made to
    :ref:`covid-19<numeric_covid_19_xam_py>` example.

05-12
*****

#.  More improvements to were made to
    :ref:`covid-19<numeric_covid_19_xam_py>` example.
#.  The :ref:`n_step<numeric_seirwd_model.n_step>` option was added to the
    SEIRWD model example.
#.  A delay between when is no longer infectious and when one dies was
    added to the SEIRWD model using a W compartment (Will die compartment).

05-09
*****
The :ref:`covid-19_modeling_example<numeric_covid_19_xam_py>` application
of AD is changing on a regular basis, so the details of the
changes will no longer be tracked in this file, just see current
example if you are interested.

05-08
*****

#.  The ``numeric_seirs_fit_xam.py`` example was renamed
    :ref:`numeric_covid_19_xam_py<numeric_covid_19_xam_py>`.
    And it was change to fit covariate multipliers that model
    the infectious rate :math:`\beta`.
#.  The ``numeric_seirs_model`` was renamed :ref:`numeric_seirwd_model<numeric_seirwd_model>`,
    the D compartment was added to track total deaths,
    the data was changed from Infectious to cumulative death, and
    noise was added to the data.
#.  In ``numeric_covid_a9_xam`` ,
    reduce to just E and I as unknowns in initial conditions.
    Initial R = D = 0, S = 1 - E - R.
#.  Use the observed information matrix to estimate the covariance
    of the optimal parameters.

05-07
*****

#.  The function ``scipy.misc.factorial``
    has been deprecated so change it to
    ``scipy.special.factorial`` .
#.  Add the ``numeric_seirs_model`` utility example
    which allows rates in the ODE to change with time.
    This enabled changing the :ref:`numeric_covid_19_xam_py<numeric_covid_19_xam_py>`
    example to estimate a :math:`\beta` coefficient that
    changes with time.
#.  The ``numeric_seirs_class`` example was removed because
    ``numeric_seirwd_model`` replaces it with more general
    capabilities.

05-06
*****

#.  Add the following utility examples:
    :ref:`numeric_optimize_fun_class<numeric_optimize_fun_class>`,
    :ref:`numeric_runge4_step<numeric_runge4_step>`,
    :ref:`numeric_ode_multi_step<numeric_ode_multi_step>`,
    ``numeric_seirs_class`` .
    (The ``numeric_seirs_class`` was later replaced by
    :ref:`numeric_seirwd_model<numeric_seirwd_model>`.)
#.  Add mention of using ``DYLD_LIBRARY_PATH`` in the
    :ref:`cppad_library_missing<install_error.cppad_library_missing>`
    install instructions for the Mac.

05-05
*****
Add the :ref:`numeric_runge4_step_xam_py<numeric_runge4_step_xam_py>` example.

05-04
*****
Add the :ref:`numeric_optimize_fun_xam_py<numeric_optimize_fun_xam_py>` example.

04-28
*****
The :ref:`f_from_json()<py_fun_json.from_json>` function was added.
In addition, the
:ref:`empty_function<py_fun_ctor.f.empty_function>` constructor was added.

04-27
*****
The ``setup.py`` program now installs a separate copy of CppAD
and provides instructions at the end for modifying your
``LD_LIBRARY_PATH`` ; see
:ref:`cppad_library_missing<install_error.cppad_library_missing>`.

04-26
*****
The ``setup.py`` program was modified to try to automatically solve the
:ref:`cppad_library_missing<install_error.cppad_library_missing>` problem.

04-25
*****
The :ref:`f_to_json()<py_fun_json.to_json>` function was added.

04-24
*****
The newer Mac systems seems to require that one use
``-stdlib=libc++`` compile and link flag.
The install has been changed to check for and adapt to this condition.
In addition, :ref:`setup_py<setup_py>` now runs the ``cmake`` command; i.e.,
the user no longer needs to run ``cmake`` to test the
:ref:`c++<setup_py.test.c++>` library.

04-23
*****
Add an :ref:`install_error<install_error>` section to the documentation.

04-22
*****

#.  Instructions were added for
    :ref:`installing_using_pip<setup_py.install_using_pip>`.
#.  The binary operators were extended to include *x* ``op`` *ay* where:
    *x* is a double (python ``float`` ),
    *ay* is an ``a_double`` ,
    and *op* is
    ``+`` ,
    ``-`` ,
    ``*`` ,
    ``/`` , or
    ``**`` .
    Note that this automatically transfers to numpy arrays; e.g
    *x* ``*`` *ay* where *x* is a double and *ay*
    is a numpy array of ``a_double`` .

04-20
*****

#.  Move configuration setting from :ref:`setup_py<setup_py>` to
    :ref:`bin/get_cppad_sh<get_cppad_sh.settings>`.
#.  First version that installs using ``pip`` .
    Install instructions for pip will be added soon.

04-19
*****

#.  Move the python source that gets distributed from ``lib/python``
    to ``lib/python/cppad_py`` so that more like a standard python package.
#.  Drop support for python2. It is not consistent with python3 in
    some of the ``setup.py`` actions.

04-18
*****

#.  Change *yq* to *xq* , correct documentation,
    for *xq* in the
    :ref:`c++<cpp_fun_reverse.xq>` and :ref:`python<py_fun_reverse.xq>`
    reverse mode documentation.
#.  Remove the ``--inplace`` option from the
    :ref:`syntax<setup_py.syntax>` for building the cppad_py python module.

04-13
*****

#.  The *z* =  ``pow`` ( *x* , *y* ) functions was added; see
    :ref:`a_double_binary<a_double_binary>`.
#.  Add the :ref:`var2par<a_double_property.var2par>` function
    and improve the notation in the
    :ref:`near_equal<a_double_property.near_equal>` notation.

04-12
*****

#.  Add the ``erf`` function was added to the
    list of ``a_double`` unary :ref:`fun<a_double_unary_fun.fun>`
    that have been implemented.
#.  The dynamic parameter argument was missing from the
    :ref:`syntax<py_independent.syntax>` for the python version
    of the ``independent`` function.  This has been fixed.
#.  Improve the :ref:`test<setup_py.test>` and :ref:`install<setup_py.install>`
    discussion in ``setup.py`` .

04-10
*****

#.  Change the documentation display on the web using a more recent version of
    the documentation program ``omhelp-20200130`` .
#.  Add :ref:`caching<get_cppad_sh.caching>` to the Cppad install.

{xsrst_end whats_new_2020}
