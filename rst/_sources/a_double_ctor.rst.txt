lines 77-134 of file: lib/cplusplus/a_double.cpp

{xrst_begin a_double_ctor}
{xrst_spell
   cppad
}


The a_double Constructor
########################

Syntax
******

C++
===
| ``cppad_py::a_double`` *ad* ()
| ``cppad_py::a_double`` *ad* ( *d* )
| ``cppad_py::a_double`` *ad* ( *a_other* )


Python
======
| *ad* =  ``cppad_py.a_double`` ()
| *ad* =  ``cppad_py.a_double`` ( *d* )
| *ad* =  ``cppad_py.a_double`` ( *a_other* )

Purpose
*******
Creates a ``cppad_py::a_double`` object that can be use
to track floating point operations and perform algorithmic differentiation.

d
*
This argument has c++ prototype

| |tab| ``const double&`` *d*

The resulting *ad* variable represents
a constant function equal to *d* .

a_other
*******
This argument has c++ prototype

| |tab| ``const a_double&`` *a_other*

The resulting *ad* variable is the same function
of the independent variables as *a_other* .

ad
**
is the ``a_double`` object that is constructed.

Example
*******
All of the other ``a_double`` examples use an ``a_double``
constructor.

{xrst_end a_double_ctor}
