-------------------------------------------------------------------------------
          cppad_py: A C++ Object Library and Python Interface to Cppad
           Copyright (C) 2017-20 Bradley M. Bell (bradbell@seanet.com)
               This program is distributed under the terms of the
               GNU General Public License version 3.0 or later see
                     https://www.gnu.org/licenses/gpl-3.0.txt
-------------------------------------------------------------------------------
$begin py_fun_property$$
$spell
    vec
    ind
    dep
$$

$section Properties of a Function Object$$
$spell
    vec
    af
    var
    op
    const
    Taylor
$$

$head Syntax$$
$icode%n% = %f%.size_domain()
%$$
$icode%m% = %f%.size_range()
%$$
$icode%v% = %f%.size_var()
%$$
$icode%p% = %f%.size_op()
%$$
$icode%q% = %f%.size_order()
%$$

$head f$$
This is either a
$cref/d_fun/py_fun_ctor/Syntax/d_fun/$$ or
$cref/a_fun/py_fun_ctor/Syntax/a_fun/$$ function object
and is constant; i.e., not changed.

$head size_domain$$
The return value $icode n$$ is an $code int$$
and is the size of the vector
$cref/ax/py_fun_ctor/ax/$$ in the function constructor; i.e.,
the number of independent variables.

$head size_range$$
The return value $icode m$$ is an $code int$$
and is the size of the vector
$cref/ay/py_fun_ctor/ay/$$ in the function constructor; i.e.,
the number of dependent variables.

$head size_var$$
The return value $icode v$$ is an $code int$$
and is the number of variables in the function.
This includes the independent variables, dependent variables,
and any variables that are used to compute the dependent variables
from the independent variables.

$head size_op$$
The return value $icode p$$ is an $code int$$
and is the number of atomic operations that are used to express
the dependent variables as a function of the independent variables.

$head size_order$$
The return value $icode q$$ is an $code int$$
and is the number of Taylor coefficients currently stored in $icode f$$,
for every variable in the operation sequence corresponding to $icode f$$.
These coefficients are computed by $cref py_fun_forward$$.
This is different from the other function properties in that it can change
after each call to $icode%f%.forward%$$; see
$cref/size_order/py_fun_forward/p/size_order/$$ in the forward mode section.

$children%
    example/python/core/fun_property_xam.py
%$$
$head Example$$
$cref fun_property_xam.py$$

$end
