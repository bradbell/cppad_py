-------------------------------------------------------------------------------
          cppad_py: A C++ Object Library and Python Interface to Cppad
           Copyright (C) 2017-22 Bradley M. Bell (bradbell@seanet.com)
               This program is distributed under the terms of the
               GNU General Public License version 3.0 or later see
                     https://www.gnu.org/licenses/gpl-3.0.txt
-------------------------------------------------------------------------------
{xrst_begin cppad_py}
{xrst_spell
   cppad
   gpl
   macros
   txt
}

.. comment:  -------------------------------------------------------------
   default automatic indexing command for all cppad_py documentation

.. comment:  -------------------------------------------------------------
   Latex macros used throughout Cppad Py documentation


A C++ Object Library and Python Interface to CppAD
##################################################

Version 2022.12.13
******************

Git Repository
**************
`<https://github.com/bradbell/cppad_py>`_

Purpose
*******

#. Provide a connection from Python to the
   Algorithmic Differentiation (AD) package Cppad; see :ref:`py_lib-name`.
#. Provide an AD object library; see :ref:`cpp_lib-name`.
#. Provide a concrete example of how
   `cppad_swig <https://github.com/bradbell/cppad_swig>`_
   can be used to connect any scripting language to CppAD.

Getting Started
***************
After you :ref:`configure<setup_py@Configure>` and
:ref:`install<setup_py@Install>` cppad_py,
the following example is a good place to get started using it:
:ref:`fun_jacobian_xam_py-title`.

Numerical Examples
******************
The following is a link to some numerical examples:
:ref:`numeric_xam-name`.

C++ Function Speed
******************
One can use Cppad Py to get faster function evaluation in scripting Python,
when the sequence of floating point operations does not depend on the
independent variables.
Once an :ref:`py_fun-name` is recorded, zero order
:ref:`forward_mode<py_fun_forward-name>` can be used to
effectively evaluate the function in C++ instead of Python.

License
*******
This program is distributed under the terms of the
GNU General Public License version 3.0 or later see
`gpl-3.0.txt <http://www.gnu.org/licenses/gpl-3.0.txt>`_.

Children
********
{xrst_toc_table
   setup.py
   example/python/numeric/numeric.xrst
   lib/library.xrst
   whats_new/release_notes.xrst
}

{xrst_end cppad_py}
